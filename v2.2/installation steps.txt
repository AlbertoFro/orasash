Steps

1. create a sash user - using following script - repo_0_user.sql - as user SYS on repository database

2. add sys procedure to kill jobs - repo_1_sys_procedure.sql - as user SYS on repository database
   
2. create repository - run as SASH user - repo_1_tables.sql

3. create repository management package - repo_2_pkg.sql - as user SYS on repository database

3. create user and view on target - targ_1_userview.sql - as SYS user on monitored database

4. create database link (from rep to prod) using my version, or from prod to rep using orginal - repo_3_dblink.sql - as user SYS on repository database - issue with 11g targets - target user has to have password in uppercase 

4. create a sash packages on rep - repo_4_packages.sql - as user SYS on repository database

5. fill proper tables related to prod;

exec sash_pkg.set_dbid;
exec sash_pkg.get_event_names;
exec sash_pkg.get_users;
exec sash_pkg.get_params;
sash_pkg.get_data_files ;
commit;

5. in 9i fill up wait class - using repo_5_waitgroups.sql

7. setup jobs 

exec sash_repo.setup_jobs


Job maintenace:

exec sash_repo.start_collecting_jobs; - to start collecting and puring jobs
exec sash_repo.stop_collecting_jobs;  - to stop collecting and puring jobs

Retention:

exec sash_repo.set_retention('<retention>');

where <retention> is one of:
- d - last week
- w - last month
- h - last 24 h
- m - last 30 minutes

about 400 connected sessions - 100 to 150 MB/day


select c, cc, trunc((RATIO_TO_REPORT(cc)  OVER ())*100,2) from 
(select c, count(*) cc from (
select sample_id, count(*) c from sash_all
group by sample_id
) 
group by c
);

List of collected rows , number of collections , % of collections on that size
1       26442       4.61
2       56480       9.85
3       71103      12.4
4       67166      11.71
5       61073      10.65
6       47057       8.21
7       39016       6.8
8       32326       5.63
9       27516       4.8
10      21433       3.73
11      15335       2.67
12      11833       2.06
13       9357       1.63
14       6738       1.17
15       4835       0.84
16       4217       0.73
17       4053       0.7
...
52        615       0.1
53        504       0.08
54        376       0.06
55        279       0.04
56        184       0.03
57        167       0.02
58        112       0.01
59         96       0.01
60         67       0.01
61         62       0.01
62         66       0.01
...
84         2        0
85         3        0
86         1        0
